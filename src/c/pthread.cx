module c.pthread;

struct pthread_mutex_t
{
    // __SIZEOF_PTHREAD_MUTEX_T is like 40 max
    long a; long b; long c; long d; long e;
}

extern(C) int pthread_mutex_init(pthread_mutex_t* mutex, void* attr);
extern(C) int pthread_mutex_destroy(pthread_mutex_t* mutex);
extern(C) int pthread_mutex_lock(pthread_mutex_t* mutex);
extern(C) int pthread_mutex_unlock(pthread_mutex_t* mutex);

struct pthread_cond_t
{
    // __SIZEOF_PTHREAD_MUTEX_T is like 48?
    long a; long b; long c; long d; long e; long f;
}

extern(C) int pthread_cond_init(pthread_cond_t*, void* attr);
extern(C) int pthread_cond_destroy(pthread_cond_t*);
extern(C) int pthread_cond_wait(pthread_cond_t*, pthread_mutex_t*);
extern(C) int pthread_cond_broadcast(pthread_cond_t*);
extern(C) int pthread_cond_signal(pthread_cond_t*);

struct pthread_t
{
    // __SIZEOF_PTHREAD_T is 8, I think?
    long a;
}

// TODO extern(C) with definition
void call_thread_dg(void* arg) {
    auto dg = *(cast(void delegate()*) arg);

    dg();
}

extern(C) int pthread_create(pthread_t* thread, void* attr, void function(void*) start_routine, void* arg);
