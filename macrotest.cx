module macrotest;

import cx.base;
import cx.expr;
import cx.types;

extern(C) void print(char[]);

class Assert : CallMacro
{
    this() {
        this.name = "assert";
    }

    override Expression transform(ASTSymbol[] symbols, Context context, Loc loc)
    {
        auto assertArgTypes = new Argument[](0) ~ new Argument("test", new Integer);
        auto assertFun = new FunctionDeclaration("assert", new Void, assertArgTypes);
        auto expr = symbols[0].compile(context);
        auto assertArgs = new Expression[](0) ~ truthy(beExpression(expr), loc);
        return new Call(assertFun, assertArgs, loc);
    }
}

Assert assertMacro() { return new Assert; }

__defineCallMacro(assertMacro);

class A {
    this() { }
}

void main(string[] args) {
    print("macrotest");
    A a = new A;
    assert(a); // this would not have worked before, because objects are not bools
    print("- success");
}
