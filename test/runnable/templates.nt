module templates;

macro import neat.macros.assert;

import helpers;

template LinkedList(T) {
    class LinkedList {
        this() { }
        LinkedList next;
        T value;
    }
}

void linkedList() {
    auto ll = new LinkedList!int();
    ll.next = new LinkedList!int();
    ll.value = 5;
    ll.next.value = 6;
}

template init(T) {
    T init() {
        mut uninitialized T t;
        return t;
    }
}

template max(T, U) {
    typeof(init!T + init!U) max(T a, U b) {
        if (a > b) return a;
        return b;
    }
}

void maxTypes() {
    assert(max!(int, int)(2, 3) == 3);
    assert(max!(float, int)(3.5f, 2) == 3.5f);
}

void main() {
    linkedList;
}
